# BULLETPROOF Dockerfile - Forces ALL dependencies to bundle
FROM node:20-alpine

# Install everything we might need
RUN apk add --no-cache curl git

WORKDIR /app

# Copy package files
COPY package*.json ./

# FORCE install ALL dependencies - production AND dev
ENV NODE_ENV=development
RUN npm install --include=dev --legacy-peer-deps

# Ensure React Query is definitely installed
RUN npm ls @tanstack/react-query || npm install @tanstack/react-query --save

# Copy source code
COPY . .

# Build with all deps available but in production mode
ENV NODE_ENV=production
RUN npm run build

# Verify React Query is in the bundle
RUN echo "=== CHECKING FOR REACT QUERY IN BUILD ===" && \
    find dist/ -name "*.js" -exec grep -l "useQuery\|useMutation\|QueryClient" {} \; || echo "⚠️  React Query not found in bundle"

# Copy build output to server/public
RUN mkdir -p server/public && \
    if [ -d "dist/public" ]; then \
      cp -r dist/public/* server/public/; \
    elif [ -d "dist" ]; then \
      cp -r dist/* server/public/; \
    else \
      echo "❌ Build failed"; exit 1; \
    fi

# Verify final setup
RUN test -f server/public/index.html || (echo "❌ Frontend missing"; exit 1)

# Force NODE_ENV back to production for runtime
ENV NODE_ENV=production

EXPOSE 5000
CMD ["npx", "tsx", "server/index.ts"]